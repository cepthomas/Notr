%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Notr
scope: text.notr
# version: 2

comment: |-
  Generally variables use underscore whereas contexts use hyphen - convention?

file_extensions:
  - ntr

# variables:
#   block_quote: (?:[ ]{,3}(>)[ ]?)                     # between 0 and 3 spaces, followed by a greater than sign, (followed by any character or the end of the line = "only care about optional space!")
#   first_list_item: (?:[ ]{,3}(?:1[.)]|[*+-])\s)       # between 0 and 3 spaces, followed by either: at least one integer and a full stop or a parenthesis, or (a star, plus or dash), followed by whitespace
#   list_item: (?:[ ]{,3}(?:\d{1,9}[.)]|[*+-])\s)       # between 0 and 3 spaces, followed by either: at least one integer and a full stop or a parenthesis, or (a star, plus or dash), followed by whitespace

contexts:

  main:
    - include: atx-heading
    - include: simple-text
    - include: structural
    - include: table
    - include: link
    - include: list
    - include: raw-block


#################### simple text formatting ###########################################

  simple-text:

    - match: '(?:^|\s)(\*[^\*]+\*)(?:[\s,.:;-])'
      captures:
        1: markup.bold

    - match: '(?:^|\s)(/[^/]+/)(?:[\s,.:;-])'
      captures:
        1: markup.italic

    - match: '(?:^|\s)(_[^_]+_)(?:[\s,.:;-])'
      captures:
        1: markup.underline

    - match: '(?:^|\s)(~[^~]+~)(?:[\s,.:;-])'
      captures:
        1: markup.strikethrough

    - match: '(`[^`]+`)'
      captures:
        0: markup.raw.inline.notr

    - match: '^( *> +)(.*)'
      captures:
        0: markup.quote.notr


#################### structural ###########################################

  structural:

    - match: '^(?:-{5,}.*)$'
      scope: markup.hrule.single.notr

    - match: '^(?:={5,}.*)$'
      scope: markup.hrule.double.notr

    - match: '^(?:\+{5,}.*)$'
      scope: markup.hrule.fill.notr

    - match: '^(?:X{5,}.*)$'
      scope: markup.hrule.hatch.notr


#################### headings ###########################################

  atx-heading:

    ### Text Attributes [[tag2 tag3]]
    - match: '^(#+) +([^\[]+) *(?:\[(.*)\])?\n'
      scope: markup.heading.notr
      captures:
        1: markup.heading.marker.notr
        2: markup.heading.content.notr
        3: markup.heading.tags.notr
    

  #################### raw block ###########################################

  raw-block:
    - match: '```'
      scope: markup.raw.block.notr
      push: raw-block-body

  raw-block-body:
    - meta_scope: markup.raw.block.notr
    - include: raw-block-end

  raw-block-end:
    # The block is broken at the first empty line, or beginning of another block-level structure
    - match: '```'
      scope: markup.raw.block.notr
      pop: 1


  #################### table ###########################################

  table:
    - match: '^\|'
      push: table-header

  table-header:
    - meta_scope: meta.table.header
    - match: '\n'
      set: table-body

  table-body:
    - meta_content_scope: meta.table
    - include: table-end

  table-end:
    # The table is broken at the first empty line, or beginning of another block-level structure
    - match: '(?x)^(?= \s*$)'
      pop: 1


  #################### list ###########################################

  list:
    - match: '^([ ]*)([-X\?!])[ ]+(.*)'
      captures:
        1: markup.list.indent.notr
        2: markup.list.marker.notr
        3: markup.list.content.notr



  #################### link ###########################################

  link:
    # link def
    - match: '\[([^:]*): *([^\]]*)\]'
      captures:
        1: markup.link.name.notr
        2: markup.underline.link.notr

    # link ref
    - match: '\[\* *([^\]]*)\]'
      captures:
        1: markup.link.refname.notr
